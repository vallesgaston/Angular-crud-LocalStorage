{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.tasks = [\n      //   {title:'write', description:'I have to write', hide:true},\n      //   {title:'create website', description:'I have to create website', hide:true}\n    ];\n  }\n  //  Obtener tareas \n  getTask() {\n    return this.tasks;\n  }\n  //agregar tareas\n  addTask(task) {\n    let tasks = [];\n    if (localStorage.getItem(\"task\") === null) {\n      tasks.push(task);\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    } else {\n      tasks = JSON.stringify(localStorage.getItem(\"tasks\"));\n      tasks.push(task);\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  }\n  deleteTask(task) {\n    for (let i = 0; i < this.tasks.length; i++) {\n      if (task == this.tasks[i]) this.tasks.splice(i, 1);\n    }\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TaskService","constructor","tasks","getTask","addTask","task","localStorage","getItem","push","setItem","JSON","stringify","deleteTask","i","length","splice","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Chaca\\OneDrive\\Escritorio\\angular-crud-localstorage\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Task } from '../models/Task';\nimport { Title } from '@angular/platform-browser';\nimport { getLocaleTimeFormat } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  tasks: Task[];\n\n  constructor() {\n    this.tasks = [\n    //   {title:'write', description:'I have to write', hide:true},\n    //   {title:'create website', description:'I have to create website', hide:true}\n    ];\n   }\n   \n\n  //  Obtener tareas \n    getTask() { \n    return this.tasks;\n\n   }\n\n   //agregar tareas\n   addTask(task: Task) {\n    let tasks:Task[] = [] ;\n    if(localStorage.getItem(\"task\") === null){\n    tasks.push(task);\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n   }else{\n    tasks = JSON.stringify(localStorage.getItem(\"tasks\"));\n    tasks.push(task);\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n   }\n   }\n\n   deleteTask(task:Task){\n    for(let i=0; i<this.tasks.length; i++){\n      if(task == this.tasks[i])\n      this.tasks.splice(i, 1);\n    }\n   }\n   \n}\n"],"mappings":";AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAA;IACE,IAAI,CAACC,KAAK,GAAG;MACb;MACA;IAAA,CACC;EACF;EAGD;EACEC,OAAOA,CAAA;IACP,OAAO,IAAI,CAACD,KAAK;EAElB;EAEA;EACAE,OAAOA,CAACC,IAAU;IACjB,IAAIH,KAAK,GAAU,EAAE;IACrB,IAAGI,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,EAAC;MACzCL,KAAK,CAACM,IAAI,CAACH,IAAI,CAAC;MAChBC,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK,CAAC,CAAC;KACpD,MAAI;MACJA,KAAK,GAAGQ,IAAI,CAACC,SAAS,CAACL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;MACrDL,KAAK,CAACM,IAAI,CAACH,IAAI,CAAC;MAChBC,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK,CAAC,CAAC;;EAErD;EAEAU,UAAUA,CAACP,IAAS;IACnB,KAAI,IAAIQ,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACX,KAAK,CAACY,MAAM,EAAED,CAAC,EAAE,EAAC;MACpC,IAAGR,IAAI,IAAI,IAAI,CAACH,KAAK,CAACW,CAAC,CAAC,EACxB,IAAI,CAACX,KAAK,CAACa,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;;EAE1B;EAAC,QAAAG,CAAA,G;qBAnCShB,WAAW;EAAA;EAAA,QAAAiB,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}